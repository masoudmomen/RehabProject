@using Rehab.EndPoint.AdminPanel.Viewmodels
@using System.Text.RegularExpressions
@rendermode InteractiveServer


<h5 class="text-decoration-underline mt-0 mb-2 text-start">Primary Information</h5>
<div class="row g-3">
    <div class="col-6">
        <label for="name" class="">Name</label>
        <InputText @bind-Value="@Facility.Name" class="@facilityNameClass" id="name"></InputText>
    </div>
    <div class="col-6">
        <label for="email" class="">Email</label>
        <InputText @bind-Value="Facility.Email" class="form-control" id="email"></InputText>
    </div>

</div>

<div class="row g-3">
    <Rehab.EndPoint.AdminPanel.Components.Controls.UsaStateCitySelectorComponent Facility="Facility" />
    @* <div class="col-6">
        <label for="State" class="">State</label>
        <InputText @bind-Value="Facility.State" class="form-control" id="State"></InputText>
    </div>
    <div class="col-6">
        <label for="City" class="">City</label>
        <InputText @bind-Value="Facility.City" class="form-control" id="City"></InputText>
    </div> *@
</div>
<div class="row g-3">
    <div class="col-6">
        <label for="phoneNumber" class="">PhoneNumber</label>
        <InputText @bind-Value="Facility.PhoneNumber" class="form-control" id="phoneNumber"></InputText>
    </div>
    <div class="col-6">
        <label for="webSite" class="">WebSite</label>
        <InputText @bind-Value="Facility.WebSite" class="form-control" id="webSite"></InputText>
    </div>
</div>
<div class="row g-3">
    <div class="col-6">
        <label for="providersPolicy" class="">Providers Policy</label>
        <InputText @bind-Value="Facility.ProvidersPolicy" class="form-control" id="providersPolicy"></InputText>
    </div>
    <div class="col-6">
        <label for="founded" class="">Founded</label>
        <InputNumber @bind-Value="Facility.Founded" class="form-control" id="founded"></InputNumber>
    </div>
</div>

<div class="row g-3">
    <div class="col-3">
        <label for="occupancyMin" class="">Minimum Occupancy</label>
        <InputNumber @bind-Value="Facility.OccupancyMin" class="form-control" id="occupancyMin"></InputNumber>
    </div>
    <div class="col-3">
        <label for="OccupancyMax" class="">Maximum Occupancy</label>
        <InputNumber @bind-Value="Facility.OccupancyMax" class="form-control" id="OccupancyMax"></InputNumber>
    </div>
    <div class="col-6">
        <label for="Slug" class="">Slug</label>
        <InputText @bind-Value="Facility.Slug" class="form-control" id="Slug"></InputText>
    </div>
</div>

<div class="row g-3">
    <div class="col-6">
        <label for="address" class="">Address</label>
        <InputTextArea @bind-Value="Facility.Address" class="form-control" id="address"></InputTextArea>
    </div>
    <div class="col-6">
        <label for="description" class="">Description</label>
        <InputTextArea @bind-Value="Facility.Description" class="form-control" id="description"></InputTextArea>
    </div>
</div>



@code{
    [Parameter]
    public FacilityViewmodel Facility { get; set; } = new();

    [Parameter]
    public string facilityNameClass { get; set; } = "form-control";
    [Parameter]
    public EventCallback<string> facilityNameClassChange { get; set; }

    private void OnChangeForName1(ChangeEventArgs e)
    {
        Console.WriteLine(e.Value!.ToString());
    }
    private async Task OnChangeForName()
    {
        Console.WriteLine("OnChangeForName");
        SetSlugFromName();
        await CheckModelNameStatus();
    }
    private async Task CheckModelNameStatus()
    {
        //Facility.Name = e.Value.ToString() ?? "";
        if (!string.IsNullOrWhiteSpace(Facility.Name))
        {
            facilityNameClass = "form-control";
            await facilityNameClassChange.InvokeAsync(facilityNameClass);
            Console.WriteLine("CheckModelNameStatus");
            //StateHasChanged();
        }
    }
    private void SetSlugFromName()
    {
        var text = Facility.Name;
        text = text.ToLowerInvariant();
        //حذف کاراکترهای غیر از حرف ، عدد و فاصله
        text = Regex.Replace(text, @"[^a-z0-9\s-]", "");
        text = Regex.Replace(text, @"\s+", "").Trim('-');
        text = Regex.Replace(text, @"-+", "-");
        Facility.Slug = text;
        StateHasChanged();
        Console.WriteLine(Facility.Slug);
    }
}