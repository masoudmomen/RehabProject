@page "/facility/add"
@using AutoMapper
@using Rehab.Application.Facilities
@using Rehab.EndPoint.AdminPanel.Viewmodels
@inject IFacilityService FacilityService
@inject AutoMapper.IMapper mapper
@rendermode InteractiveServer




@* <div class="container w-75 mx-auto my-4">
    <h3>Add Facility</h3>
    <EditForm Model="Facility" OnValidSubmit="Add" class="form-control" FormName="AddFacilityForm" style="height:550px;">
        <section class="card-body">
            <label class="text-decoration-underline mt-0 mb-2 text-lg-center">Primary Information</label>
            @switch (comoponentNumber)
            {
                case 1:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section1Component Facility="Facility" />
                    break;
                case 2:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section2Component  />
                    break;
                default:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section1Component Facility="Facility" />
                    break;
            }

        </section>
        <hr />
        <div class="row mt-3   end-0" >
            <div class="col-4">
                <button type="submit" class="btn btn-primary">Add</button>
            </div>
            <div class="col-6"><button type="button" class="btn btn-primary  float-end" style="width:105px;" @onclick="ComponentMinus">&lt; Previous</button></div>
            <div class="col-6"><button type="button" class="btn btn-primary" style="width:105px;" @onclick="ComponentPlus">Next &gt;</button></div>
        </div>
    </EditForm>
</div>
 *@


<div class="container w-75 mx-auto my-4" style="height: 550px;">
    <h3>Add Facility</h3>

    <EditForm Model="Facility" OnValidSubmit="Add" class="form-control d-flex flex-column h-100" FormName="AddFacilityForm">

        <section class="card-body flex-grow-1">
            @switch (comoponentNumber)
            {
                case 1:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section1Component Facility="Facility" />
                    break;
                case 2:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section2Component />
                    break;
                default:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section1Component Facility="Facility" />
                    break;
            }
        </section>

        <hr />

        <div class="row mt-1">
            <div class="col-6">
                <button type="button"  class="btn btn-primary float-end @PreviousBtnStatus" style="width:105px;" @onclick="ComponentMinus">&lt; Previous</button>
            </div>
            <div class="col-6">
                <button type="button" class="btn btn-primary @NextBtnStatus" style="width:105px;" @onclick="ComponentPlus">Next &gt;</button>
            </div>
        </div>

    </EditForm>
</div>




@code {
    public FacilityViewmodel Facility { get; set; } = new();
    private int comoponentNumber = 1;
    private BaseDto<FacilityDto> AddResult = new();
    private string PreviousBtnStatus = "disabled";
    private string NextBtnStatus = "";

    private void ComponentPlus()
    {
        comoponentNumber = (comoponentNumber < 8) ? comoponentNumber+1 : comoponentNumber;
        CheckBtnsStatus();
        StateHasChanged();
    }

    private void ComponentMinus()
    {
        comoponentNumber = (comoponentNumber > 1) ? comoponentNumber-1 : comoponentNumber;
        CheckBtnsStatus();
        StateHasChanged();
    }

    private void CheckBtnsStatus()
    {
        if(comoponentNumber <8 && comoponentNumber > 1)
        {
            NextBtnStatus = PreviousBtnStatus = "";
        }
        else
        {
            if (comoponentNumber == 8) NextBtnStatus = "disabled";
            if (comoponentNumber == 1) PreviousBtnStatus = "disabled";
        }
    }

    private void Add()
    {
        if(Facility is not null)
        {
            AddResult = FacilityService.Add(mapper.Map<FacilityDto>(Facility));
        }
    }
}
