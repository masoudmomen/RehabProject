@page "/facility/add"
@using AutoMapper
@using Rehab.Application.Facilities
@using Rehab.EndPoint.AdminPanel.Viewmodels
@inject IFacilityService FacilityService
@inject AutoMapper.IMapper mapper
@rendermode InteractiveServer
@inject AlertService AlertService




<div class="container w-75 mx-auto my-5" style="height: 550px;">
    <h3>Add Facility</h3>

    <EditForm Model="Facility" OnValidSubmit="Add" class="form-control d-flex flex-column "
    FormName="AddFacilityForm">
        <section class="card-body flex-grow-1 pb-0">
            @switch (comoponentNumber)
            {
                case 1:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section1Component Facility="Facility" facilityNameClass="@facilityNameClass" facilityNameClassChange="@OnFacilityNameClassChange" />
                    break;
                case 2:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section2Component Facility="Facility" />
                    break;
                case 3:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section3Component Facility="Facility" />
                    break;
                case 4:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section4Component Facility="Facility" />
                    break;
                case 5:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section5Component Facility="Facility" />
                    break;
                case 6:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section6Component Facility="Facility" />
                    break;
                case 7:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section7Component Facility="Facility" />
                    break;
                case 8:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section8Component Facility="Facility" />
                    break;
                case 9:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section9Component Facility="Facility" />
                    break;
                case 10:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section10Component Facility="Facility" />
                    break;

                default:
                    <Rehab.EndPoint.AdminPanel.Components.Controls.AddFacilitiesComponents.Section1Component Facility="Facility" />
                    break;
            }
        </section>

        <hr />

        <div class="row ">
            <div class="col-6">
                <button type="button"  class="btn btn-primary float-end @PreviousBtnStatus" style="width:105px;" @onclick="ComponentMinus">&lt; Previous</button>
            </div>
            <div class="col-6">
                @if(comoponentNumber != 10)
                {
                    <button type="button" class="btn btn-primary @NextBtnStatus" style="width:105px;" @onclick="ComponentPlus">Next &gt;</button>
                }
                else
                {
                    <button type="submit" class="btn btn-success @NextBtnStatus" style="width:105px;">Finish</button>
                }
            </div>
        </div>

    </EditForm>
</div>




@code {
    public FacilityViewmodel Facility { get; set; } = new();
    private int comoponentNumber = 1;
    private BaseDto<AddRequestFacilityDto> AddResult = new();
    private string PreviousBtnStatus = "disabled";
    private string NextBtnStatus = "";
    public string facilityNameClass { get; set; } = "form-control";

    private void ComponentPlus()
    {
        comoponentNumber = (comoponentNumber < 10) ? comoponentNumber+1 : comoponentNumber;
        CheckBtnsStatus();
        StateHasChanged(); 
    }

    private void ComponentMinus()
    {
        comoponentNumber = (comoponentNumber > 1) ? comoponentNumber-1 : comoponentNumber;
        CheckBtnsStatus();
        StateHasChanged();
    }

    private void CheckBtnsStatus()
    {
        if(comoponentNumber <10 && comoponentNumber > 1)
        {
            NextBtnStatus = PreviousBtnStatus = "";
        }
        else
        {
            // if (comoponentNumber == 8) NextBtnStatus = "disabled";
            if (comoponentNumber == 1)
            {
                PreviousBtnStatus = "disabled";
            }
        }
    }


    private void OnFacilityNameClassChange(string facilityNameClassFromComponent)
    {
        facilityNameClass = facilityNameClassFromComponent;
    }

    private void Add()
    {
        if(Facility is not null)
        {
            if (string.IsNullOrWhiteSpace(Facility.Name))
            {
                facilityNameClass = "form-control border-danger";
                comoponentNumber = 1;
                AlertService.ShowAsync("Name field is Required", "danger");
            }
            else
            {
                AddResult = FacilityService.Add(mapper.Map<AddRequestFacilityDto>(Facility));
                AlertService.ShowAsync(AddResult.Message, AddResult.Status);
                if (AddResult.Success)
                {
                    Facility = new();
                    comoponentNumber = 1;
                }
            }
        }
    }
}
